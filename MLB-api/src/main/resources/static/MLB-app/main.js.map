{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/Service/dates.service.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/dialog/dialog.component.css","webpack:///./src/app/dialog/dialog.component.html","webpack:///./src/app/dialog/dialog.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;;ACZ2C;AACO;AAIK;AAOvD;IAKE,sBAAoB,IAAgB,EAAU,QAAkB;QAA5C,SAAI,GAAJ,IAAI,CAAY;QAAU,aAAQ,GAAR,QAAQ,CAAU;QADhE,QAAG,GAAG,IAAI,IAAI,EAAE,CAAC;IAGjB,CAAC;IACD,+BAAQ,GAAR,UAAS,YAAoB;QAE3B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAW,wBAAwB,GAAG,YAAY,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;QAE7F,6HAA6H;IAC5H,CAAC;IACD,kCAAW,GAAX;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;IAChD,CAAC;IACD,mCAAY,GAAZ,UAAa,YAAoB;QAC/B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,uBAAuB,GAAG,YAAY,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,GAAG,QAAQ,CAAC,CAAC;IAC5F,CAAC;IACD,6BAAM,GAAN;QACE,OAAO,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,YAAY,CAAC,CAAC;IACzD,CAAC;IAtBU,YAAY;QAHxB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAM0B,+DAAU,EAAoB,wDAAQ;OALrD,YAAY,CAwBxB;IAAD,mBAAC;CAAA;AAxBwB;;;;;;;;;;;;;;;;;;;ACZgB;AACc;AAEvD,IAAM,MAAM,GAAW,EAAE,CAAC;AAM1B;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAJ5B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;ACT7B,+DAA+D,+H;;;;;;;;;;;ACA/D,+MAA+M,eAAe,YAAY,mGAAmG,wKAAwK,oGAAoG,+BAA+B,kM;;;;;;;;;;;;;;;;;;;;;;;;ACA3jB;AAIN;AAGL;AAC2B;AACjB;AAER;AAUpD;IAUE,sBAAoB,OAAqB,EAAS,MAAiB;QAA/C,YAAO,GAAP,OAAO,CAAc;QAAS,WAAM,GAAN,MAAM,CAAW;QANnE,UAAK,GAAG,SAAS,CAAC;QAOpB,IAAI,CAAC,KAAK,GAAG,MAAM;IACjB,CAAC;IAED,+BAAQ,GAAR;QAGE,IAAI,CAAC,OAAO,GAAG;YACb,OAAO,EAAE,CAAC,4DAAa,CAAC;YACxB,WAAW,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;YAClC,aAAa,EAAE;gBACb,cAAc,EAAE;oBACd,IAAI,EAAE,gBAAgB;oBACtB,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC;iBAC7B;aACF;YACD,MAAM,EAAE;gBACN,IAAI,EAAE,WAAW;gBACjB,MAAM,EAAE,OAAO;gBACf,KAAK,EAAE,gBAAgB;aACxB;YAED,MAAM,EAAE,GAAG;YACX,WAAW,EAAE,GAAG;YAChB,aAAa,EAAE,GAAG;YAClB,cAAc,EAAE,OAAO;YACvB,WAAW,EAAE,UAAC,KAAK;gBAElB;;;;;;;;;;;oBAWI;YAEL,CAAC;SACF,CAAC;IAEJ,CAAC;IACH,+BAAQ,GAAR;QACE,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;IAGC,4BAAK,GAAL;QAAA,iBAKC;QAJC,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,cAAI;YACvC,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACvB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IACD,gCAAS,GAAT;QAAA,iBAuDC;QAtDC,IAAM,YAAY,GAAG,IAAI,iEAAe,EAAE,CAAC;QAC3C,YAAY,CAAC,YAAY,GAAG,KAAK,CAAC;QAClC,YAAY,CAAC,SAAS,GAAG,IAAI,CAAC;QAC9B,YAAY,CAAC,IAAI,GAAG;YAClB,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,KAAK,EAAE,gBAAgB;SACxB;QACD,IAAI,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,wEAAe,EAAE;YAChD,KAAK,EAAE,OAAO;SACf,CAAC,CAAC;QAGH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,mBAAS;YAEzC,KAAI,CAAC,IAAI,GAAG,SAAS,CAAC;YACtB,KAAI,CAAC,KAAK,GAAG,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC;YAC7B,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,kBAAQ;gBACtD,KAAI,CAAC,WAAW,EAAE,CAAC;gBACnB,4CAA4C;gBAI5C,KAAkB,UAAQ,EAAR,qBAAQ,EAAR,sBAAQ,EAAR,IAAQ,EAAE;oBAAvB,IAAI,OAAK;oBACZ,IAAI,SAAS,GAAW,OAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;oBAGhD,wCAAwC;oBACxC,IAAI,OAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,KAAI,CAAC,IAAI,CAAC,IAAI,EAAE;wBAC1C,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC;4BACf,KAAK,EAAE,QAAQ,GAAG,OAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI;4BACrC,KAAK,EAAE,SAAS;4BAChB,0BAA0B;4BAC1B,KAAK,EAAE,KAAI,CAAC,IAAI,CAAC,KAAK;yBAIvB,CAAC;qBACH;yBAAM;wBACL,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC;4BACf,KAAK,EAAE,OAAO,GAAG,OAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI;4BACpC,KAAK,EAAE,SAAS;4BACjB,2BAA2B;4BAC1B,KAAK,EAAE,SAAS;yBAEjB,CAAC;qBACH;iBACF;YAEH,CAAC,CAAC,CAAC;QAIL,CAAC,CAAC,CAAC;IAEL,CAAC;IACD,kCAAW,GAAX;QACE,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;IAEnB,CAAC;IA5HsB;QAAtB,+DAAS,CAAC,UAAU,CAAC;wEAAK,iEAAY;4CAAA;IAD5B,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,yFAAmC;;SAEpC,CAAC;+EAW6B,mEAAY,EAAiB,2DAAS;OAVxD,YAAY,CAgIxB;IAAD,mBAAC;CAAA;AAhIwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrBiC;AACjB;AAGe;AACT;AAQpB;AACkB;AACkC;AACvB;AAEb;AACiB;AACF;AAyC1D;IAAA;IAAyB,CAAC;IAAb,SAAS;QAvCrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,yEAAe;aAChB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,oEAAgB;gBAChB,qEAAgB;gBAChB,wEAAkB;gBAClB,iEAAe;gBACf,iEAAe;gBACf,4FAAuB;gBACvB,+DAAa;gBACb,kEAAgB;gBAChB,+DAAa;gBACb,+DAAa;gBACb,iEAAe;gBACf,0DAAW;aACZ;YACD,OAAO,EAAE;gBACP,iEAAe;gBACf,iEAAe;gBACf,+DAAa;gBACb,kEAAgB;gBAChB,+DAAa;gBACb,+DAAa;gBACb,iEAAe;aAChB;YACD,eAAe,EAAE;gBACf,yEAAe;aAChB;YAED,SAAS,EAAE;gBACT,wDAAQ;aAET;YACD,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;AC7DtB,iCAAiC,yBAAyB,yBAAyB,oBAAoB,OAAO,iCAAiC,oBAAoB,OAAO,+CAA+C,+f;;;;;;;;;;;ACAzN,uQAAuQ,WAAW,mW;;;;;;;;;;;;;;;;;;;ACAxN;AACN;AAEI;AACP;AAMjD;IAKE,yBAA4C,IAAS,EAAU,OAAqB,EAAS,SAA6B;QAA9E,SAAI,GAAJ,IAAI,CAAK;QAAU,YAAO,GAAP,OAAO,CAAc;QAAS,cAAS,GAAT,SAAS,CAAoB;IAG1H,CAAC;IAED,kCAAQ,GAAR;QAAA,iBAIC;QAHC,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,cAAI;YACvC,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACvB,CAAC,CAAC;IACJ,CAAC;IAED,iCAAO,GAAP;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAClC,CAAC;IAlBU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;YACtB,sGAAsC;;SAEvC,CAAC;QAMa,6GAAM,CAAC,iEAAe,CAAC;uFAAoC,mEAAY,EAAoB,8DAAY;OALzG,eAAe,CAmB3B;IAAD,sBAAC;CAAA;AAnB2B;;;;;;;;;;;;;ACV5B;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Dates } from '../model/Dates';\nimport { TemplateAst } from '@angular/compiler';\nimport { formatDate, DatePipe } from '@angular/common';\nimport { map, filter, catchError, mergeMap } from 'rxjs/operators';\nimport { Events } from '../model/Events';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DatesService {\n\n  monthSelected: String;\n\n  now = new Date();\n  constructor(private http: HttpClient, private datePipe: DatePipe) {\n\n  }\n  getDates(teamSelected: String): Observable<any> {\n\n    return this.http.get<Events[]>('http://localhost:8080/' + teamSelected.replace(/ /g, \"\"));\n  \n //   return this.http.get('http://localhost:8080/' + teamSelected.replace(/ /g, \"\"));//'?monthSelected='+this.monthSelected);\n  }\n  getTeamList(): Observable<any> {\n    return this.http.get('http://localhost:8080');\n  }\n  getTeamColor(teamSelected: String) {\n    return this.http.get('http://localhost:8080' + teamSelected.replace(/ /g, \"\") + '/color');\n  }\n  getNow() {\n    return this.datePipe.transform(this.now, 'yyyy-MM-dd');\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n\\n\\n\\n<div style=\\\"text-align:center\\\">\\n  <h1>\\n    MLB CALENDAR\\n  </h1>\\n</div>\\n\\n\\n<div style=\\\"text-align: center;\\\">\\n\\n  <h4>{{team?.name}}</h4></div>\\n  <div align=\\\"center\\\" style=\\\"align-content: center\\\">\\n  <table style=\\\"width: 25%; text-align: center\\\" class=\\\"content input-color\\\">\\n    <tr>\\n      <td><label>Away</label></td>\\n     <td><div class=\\\"color-box\\\" style=\\\"background-color: #bcbcbc;\\\"></div></td>\\n      <td><label>Home</label></td>\\n     <td> <div class=\\\"color-box\\\" [ngStyle]=\\\"{'background-color': getColor()}\\\"></div></td>\\n    </tr>\\n\\n  </table>\\n</div>\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n<p-fullCalendar #calendar [events]=\\\"events\\\" [options]=\\\"options\\\">test</p-fullCalendar>\\n\\n\\n<router-outlet></router-outlet>\"","import { Component, OnInit, ViewChild } from '@angular/core';\n\n\nimport { Dates } from './model/Dates';\nimport { DatesService } from './Service/dates.service';\nimport { Team } from './model/Team';\n\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport { MatDialog, MatDialogConfig, MatDialogRef } from '@angular/material';\nimport { DialogComponent } from './dialog/dialog.component';\n\nimport { FullCalendar } from 'primeng/fullcalendar';\nimport { element, elementStyling } from '@angular/core/src/render3';\n\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  @ViewChild('calendar') fc: FullCalendar\n  events: any[];\n  options: any;\n  title = 'MLB-app';\n  dates: Dates[];\n  teamList: Team[];\n  color: String ;\n  team: Team;\n\n  constructor(private service: DatesService, public dialog: MatDialog) {\nthis.color = '#fff'\n  }\n\n  ngOnInit() {\n\n\n    this.options = {\n      plugins: [dayGridPlugin],\n      defaultDate: this.service.getNow(),\n      customButtons: {\n        myCustomButton: {\n          text: 'Team Selection',\n          click: this.click.bind(this)\n        }\n      },\n      header: {\n        left: 'prev,next',\n        center: 'title',\n        right: 'myCustomButton',\n      },\n\n      height: 850,\n      aspectRatio: 2.0,\n      contentHeight: 850,\n      eventTextColor: \"#ffff\",\n      eventRender: (event) => {\n\n       /* let element: Element = event.el;\n        let s: String = event.event.title;\n\n        let away: String = s.substring(s.lastIndexOf('@') + 1, s.length);\n        let home: String = s.split(\"VS\")[1];\n\n       if (event.event.backgroundColor === this.team.color) {\n          element.insertAdjacentHTML('beforeend', '<p style=\"color:white; text-align:center\">vs. ' + home + '</p>');\n        }\n        else {\n          element.insertAdjacentHTML('beforeend', '<p style=\"color:black; text-align:center\">' + '@ ' + away + '</p>');\n        }*/\n\n      }\n    };\n   \n  }\ngetColor(){\n  return this.color;\n}\n\n\n  click() {\n    this.service.getTeamList().subscribe(data => {\n      this.teamList = data;\n    });\n    this.openModal();\n  }\n  openModal(): void {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = false;\n    dialogConfig.autoFocus = true;\n    dialogConfig.data = {\n      team: this.team,\n      title: 'Team Selection'\n    }\n    let dialogRef = this.dialog.open(DialogComponent, {\n      width: '300px'\n    });\n\n\n    dialogRef.afterClosed().subscribe(selection => {\n\n      this.team = selection;\n      this.color = this.team.color;\n      this.service.getDates(this.team.name).subscribe(schedule => {\n        this.clearEvents();\n        //console.log(schedule[0].games[0].gameDate)\n\n\n\n        for (let event of schedule) {\n          let startTime: string = event.games[0].gameDate;\n\n         \n          // console.log(event.games[0].gameDate);\n          if (event.games[0].home === this.team.name) {\n            this.events.push({\n              title: '\\nVS\\n' + event.games[0].away,\n              start: startTime,\n              //rendering: 'background',\n              color: this.team.color,\n\n\n\n            })\n          } else {\n            this.events.push({\n              title: '\\n@\\n' + event.games[0].home,\n              start: startTime,//event.date,\n             // rendering: 'background',\n              color: '#bcbcbc',\n\n            })\n          }\n        }\n\n      });\n\n\n\n    });\n\n  }\n  clearEvents() {\n    this.events = [];\n\n  }\n\n\n}","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {\n  MatDialogModule, MatButtonModule,\n  MatMenuModule,\n  MatToolbarModule,\n  MatIconModule,\n  MatCardModule,\n  MatSelectModule\n} from '@angular/material';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { DatePipe } from '@angular/common';\nimport { DialogComponent } from './dialog/dialog.component';\nimport { FullCalendarModule } from 'primeng/fullcalendar';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DialogComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FullCalendarModule,\n    MatDialogModule,\n    MatButtonModule,\n    BrowserAnimationsModule,\n    MatMenuModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatCardModule,\n    MatSelectModule,\n    FormsModule\n  ],\n  exports: [\n    MatDialogModule,\n    MatButtonModule,\n    MatMenuModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatCardModule,\n    MatSelectModule\n  ],\n  entryComponents: [\n    DialogComponent,\n  ],\n\n  providers: [\n    DatePipe,\n\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".example-form {\\r\\n    min-width: 150px;\\r\\n    max-width: 500px;\\r\\n    width: 100%;\\r\\n  }\\r\\n  \\r\\n  .example-full-width {\\r\\n    width: 100%;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGlhbG9nL2RpYWxvZy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZ0JBQWdCO0lBQ2hCLGdCQUFnQjtJQUNoQixXQUFXO0VBQ2I7O0VBRUE7SUFDRSxXQUFXO0VBQ2IiLCJmaWxlIjoic3JjL2FwcC9kaWFsb2cvZGlhbG9nLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZXhhbXBsZS1mb3JtIHtcclxuICAgIG1pbi13aWR0aDogMTUwcHg7XHJcbiAgICBtYXgtd2lkdGg6IDUwMHB4O1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgfVxyXG4gIFxyXG4gIC5leGFtcGxlLWZ1bGwtd2lkdGgge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgfSJdfQ== */\"","module.exports = \"\\n<mat-dialog-content>\\n    <mat-form-field class=\\\"example-full-width\\\">\\n    <mat-label>Select Team</mat-label>\\n        <mat-select [(ngModel)]=\\\"team\\\">\\n          <mat-option *ngFor=\\\"let team of teamList\\\" [value]=\\\"team\\\">\\n            {{team.name}}\\n          </mat-option>\\n        </mat-select>\\n    </mat-form-field>\\n      </mat-dialog-content>\\n\\n<mat-dialog-actions>\\n <button mat-button mat-dialog-close>Cancel</button>\\n <!-- The mat-dialog-close directive optionally accepts a value as a result for the dialog.-->\\n <button mat-button (click)=\\\"confirm()\\\">OK</button>\\n</mat-dialog-actions>\\n\"","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material';\nimport { Team } from '../model/Team';\nimport { DatesService } from '../Service/dates.service';\nimport { MatDialogRef } from '@angular/material';\n@Component({\n  selector: 'app-dialog',\n  templateUrl: './dialog.component.html',\n  styleUrls: ['./dialog.component.css']\n})\nexport class DialogComponent implements OnInit {\n  teamList: Team[];\n  team: Team;\n  modalTitle: String;\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any, private service: DatesService, public dialogRef: MatDialogRef<Team>) {\n\n\n  }\n\n  ngOnInit() {\n    this.service.getTeamList().subscribe(data => {\n      this.teamList = data;\n    })\n  }\n\n  confirm() {\n    this.dialogRef.close(this.team);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}